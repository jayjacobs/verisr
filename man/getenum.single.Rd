% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/verisr.R
\name{getenum.single}
\alias{getenum.single}
\title{Get a data.frame of counts from an enumeration}
\usage{
getenum.single(veris, enum, filter = NULL, add.n = T, add.freq = T)
}
\arguments{
\item{veris}{a verisr object}

\item{enum}{the field to count}

\item{filter}{limit what records are searched (optional)}

\item{add.n}{include a total count of variables found (denominator)}

\item{add.freq}{include a percentage (x/n)}
}
\description{
When exploring VERIS data, you may want to get a simple count of the values within a value or enumeration.
Given one or more enumerations, this will return the subsequent underlying logical values in an ordered data frame.
}
\details{
Note there are some special values that can be set as the enumeration,
that may not be obvious. :
* actor, action, attribute: will all return the next level down.  For example, just querying for "action" will return "malware", "hacking", and so on.
* action.variety: will return the variety enumerations across all actions (e.g. top N actions) (not in getenumby() yet)
* asset.variety: will return the type of assets, "Server", "Network, "User Dev" and so on
* victim.industry2: will return a short label of industries based on 2 values of NAICS code.
* victim.industry3: will return a short label of industries based on 3 values of NAICS code.
* pattern: will return the pattern the incidents are in.

Change in 1.1: the "add.n" and "add.freq" options are now TRUE by default.
}
\examples{
\dontrun{
hacking <- getenum(veris, "action.hacking.variety")
external <- getenum(veris, "actor.external.motive")
}
}

